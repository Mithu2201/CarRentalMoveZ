@model CarRentalMoveZ.ViewModels.BookingDetailsViewModel

@{
    ViewData["Title"] = "Booking Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container py-4">
    <div class="card shadow-sm rounded-4 p-3">
        <h3>Booking Details</h3>
        <hr />

        <div class="row g-3 align-items-start">
            <!-- Left: Car Image -->
            <div class="col-md-5 text-center">
                @if (!string.IsNullOrEmpty(Model.ImgURL))
                {
                    <img src="@Model.ImgURL" alt="Car" class="img-fluid rounded shadow-sm" style="max-height:400px; object-fit:cover;" />
                }
            </div>

            <!-- Right: Booking Info & Payment -->
            <div class="col-md-7">
                <p><strong>Booking ID:</strong> @Model.BookingId</p>
                <p><strong>Customer:</strong> @Model.CustomerName</p>
                <p><strong>Phone:</strong> @Model.PhoneNumber</p>
                <p><strong>Car:</strong> @Model.CarName</p>
                <p><strong>Location:</strong> @Model.Location</p>
                <p><strong>Dates:</strong> @Model.StartDate.ToShortDateString() - @Model.EndDate.ToShortDateString()</p>
                <p>
                    <strong>Status:</strong>
                    <span class="badge bg-@(Model.BookingStatus == "Pending" ? "warning" : Model.BookingStatus == "Confirmed" ? "success" : "secondary")">
                        @Model.BookingStatus
                    </span>
                </p>
                <p>
                    <strong>Payment:</strong>
                    @if (!Model.IsPaid && Model.PaymentStatus == "Pending to refund")
                    {
                        <span class="badge bg-warning">Pending to refund</span>
                    }
                    else if (!Model.IsPaid)
                    {
                        <span class="badge bg-warning">Pending</span>
                    }
                    else
                    {
                        <span class="badge bg-success">@Model.PaymentMethod</span>
                    }

                </p>
                <p><strong>Amount:</strong> @Model.Amount.ToString("C")</p>

                @* Unified Email OTP Flow for Payment & Refund *@
                @if (Model.IsPaid && Model.PaymentStatus == "Pending to refund")
                {
                    <!-- Refund flow -->
                    <form id="cashRefundForm" method="post" asp-action="CashierBookingDetails" asp-controller="Admin">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.BookingId)
                        @Html.HiddenFor(m => m.CarId)
                        @Html.HiddenFor(m => m.CustomerId)
                        @Html.HiddenFor(m => m.Location)
                        @Html.HiddenFor(m => m.BookingStatus)
                        @Html.HiddenFor(m => m.PaymentAmount)
                        @Html.HiddenFor(m => m.DriverStatus)
                        <input type="hidden" name="PaymentMethod" value="Card" />
                        <input type="hidden" name="PaymentStatus" value="Refunded" />
                        <input type="hidden" name="IsPaid" value="false" />

                        <div class="mb-2 text-start">
                            <button type="button" class="btn btn-danger" id="cash-refund-btn">Initiate Refund</button>
                        </div>

                        <div id="cash-refund-otp-section" class="mt-3 d-none text-start">
                            <label for="cash-refund-otp-input" class="form-label fw-semibold">Enter Refund OTP sent to Email:</label>
                            <input type="text" id="cash-refund-otp-input" class="form-control mb-2" />
                            <button type="button" class="btn btn-success" id="cash-refund-verify-btn">Verify OTP</button>
                            <p id="cash-refund-otp-message" class="mt-2"></p>
                        </div>

                        <button type="button" class="btn btn-primary mt-2" id="send-refund-otp-btn">Send OTP For Refund</button>
                    </form>
                }
                else if (!Model.IsPaid)
                {
                    <!-- Payment flow -->
                    <form id="cashPaymentForm" method="post" asp-action="ConfirmCash" asp-controller="Admin">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.BookingId)
                        @Html.HiddenFor(m => m.CarId)
                        @Html.HiddenFor(m => m.CustomerId)
                        @Html.HiddenFor(m => m.Location)
                        @Html.HiddenFor(m => m.BookingStatus)
                        @Html.HiddenFor(m => m.DriverStatus)
                        @Html.HiddenFor(m => m.Amount)
                        <input type="hidden" name="PaymentMethod" value="Cash" />
                        <input type="hidden" name="PaymentStatus" value="Paid" />
                        <input type="hidden" name="IsPaid" value="true" />

                        <div id="otp-section" class="mt-3 text-start">
                            <label for="otp-input" class="form-label fw-semibold">Enter Payment OTP sent to Email:</label>
                            <input type="text" id="otp-input" class="form-control mb-2" />
                            <button type="button" class="btn btn-success" id="verify-otp-btn">Verify OTP</button>
                            <p id="otp-message" class="mt-2"></p>
                        </div>

                        <button type="button" class="btn btn-primary mt-2" id="send-otp-btn">Send OTP for Cash Payment</button>
                    </form>
                }


            </div>
        </div>
    </div>
</div>

@* @section Scripts {
    <script>
        function initOtpFlow(config) {
            let currentOTP = '';

            const triggerBtn = document.getElementById(config.triggerBtnId);
            const section = document.getElementById(config.sectionId);
            const verifyBtn = document.getElementById(config.verifyBtnId);
            const input = document.getElementById(config.inputId);
            const message = document.getElementById(config.messageId);
            const form = document.getElementById(config.formId);

            if (triggerBtn) {
                triggerBtn.addEventListener('click', () => {
                    currentOTP = Math.floor(100000 + Math.random() * 900000).toString();
                    console.log(`${config.type} OTP:`, currentOTP);

                    alert(config.startAlert);
                    section.classList.remove('d-none');
                    triggerBtn.classList.add('d-none');
                });
            }

            if (verifyBtn) {
                verifyBtn.addEventListener('click', () => {
                    const entered = input.value.trim();

                    if (entered === currentOTP) {
                        message.textContent = config.successText;
                        message.classList.remove('text-danger');
                        message.classList.add('text-success');

                        alert(config.successAlert);

                        form.submit();
                    } else {
                        message.textContent = "Invalid OTP!";
                        message.classList.remove('text-success');
                        message.classList.add('text-danger');
                    }
                });
            }
        }

        // Init Payment OTP Flow
        // initOtpFlow({
        //     type: "Cash Payment",
        //     triggerBtnId: "cash-confirm-btn",
        //     sectionId: "cash-otp-section",
        //     verifyBtnId: "cash-otp-verify-btn",
        //     inputId: "cash-otp-input",
        //     messageId: "cash-otp-message",
        //     formId: "cashPaymentForm",
        //     startAlert: "Reservation Confirmed. Pay within 3 days. OTP sent.",
        //     successText: "Booking Confirmed!",
        //     successAlert: "Your booking has been finalized."
        // });

        // Init Refund OTP Flow
        initOtpFlow({
            type: "Cash Refund",
            triggerBtnId: "cash-refund-btn",
            sectionId: "cash-refund-otp-section",
            verifyBtnId: "cash-refund-verify-btn",
            inputId: "cash-refund-otp-input",
            messageId: "cash-refund-otp-message",
            formId: "cashRefundForm",
            startAlert: "Refund request initiated. OTP sent.",
            successText: "Refund Confirmed!",
            successAlert: "Refund has been processed successfully."
        });
    </script>
}
 *@

@section Scripts {
<script>
    // ----------------- PAYMENT OTP -----------------
    const paymentSendBtn = document.getElementById("send-otp-btn");
    const paymentVerifyBtn = document.getElementById("verify-otp-btn");

    if(paymentSendBtn){
        paymentSendBtn.addEventListener("click", function () {
            fetch("/Otp/SendOtp", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: "email=@Model.CustomerEmail" // dynamic email from model
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    alert("OTP sent to email for payment!");
                    document.getElementById("otp-section").classList.remove("d-none");
                }
            });
        });
    }

    if(paymentVerifyBtn){
        paymentVerifyBtn.addEventListener("click", function () {
            var enteredOtp = document.getElementById("otp-input").value;
            fetch("/Otp/VerifyOtp", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: "enteredOtp=" + enteredOtp
            })
            .then(res => res.json())
            .then(data => {
                var msg = document.getElementById("otp-message");
                msg.textContent = data.message;
                msg.className = data.success ? "text-success" : "text-danger";

                if (data.success) {
                    document.getElementById("cashPaymentForm").submit();
                }
            });
        });
    }

    // ----------------- REFUND OTP -----------------
    const refundSendBtn = document.getElementById("cash-refund-btn");
    const refundVerifyBtn = document.getElementById("cash-refund-verify-btn");

    if(refundSendBtn){
        refundSendBtn.addEventListener("click", function () {
            fetch("/Otp/SendOtp", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: "email=Shesanth2005@gmail.com"
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    alert("OTP sent to email for refund!");
                    document.getElementById("cash-refund-otp-section").classList.remove("d-none");
                }
            });
        });
    }

    if(refundVerifyBtn){
        refundVerifyBtn.addEventListener("click", function () {
            var enteredOtp = document.getElementById("cash-refund-otp-input").value;
            fetch("/Otp/VerifyOtp", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: "enteredOtp=" + enteredOtp
            })
            .then(res => res.json())
            .then(data => {
                var msg = document.getElementById("cash-refund-otp-message");
                msg.textContent = data.message;
                msg.className = data.success ? "text-success" : "text-danger";

                if (data.success) {
                    document.getElementById("cashRefundForm").submit();
                }
            });
        });
    }
</script>
}







@*       <div class="mb-2 text-start">
                            <button type="submit" class="btn btn-primary" id="cash-confirm-btn">
                                Confirm Cash Payment
                            </button>
                        </div>
 *@
@*      <div id="cash-otp-section" class="mt-3 d-none text-start">
                            <label for="cash-otp-input" class="form-label fw-semibold">Enter OTP sent:</label>
                            <input type="text" id="cash-otp-input" class="form-control mb-2" />
                            <button type="button" class="btn btn-success" id="cash-otp-verify-btn">Verify OTP</button>
                            <p id="cash-otp-message" class="mt-2"></p>
                        </div> *@